{"version":3,"file":"animation_ast.js","sourceRoot":"","sources":["../../../../../../packages/animations/browser/src/dsl/animation_ast.ts"],"names":[],"mappings":";;;;;AASA,MAAM,uBAAuB,GAAqB,EAAE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimateTimings, AnimationMetadataType, AnimationOptions, ɵStyleData} from '@angular/animations';\n\nconst EMPTY_ANIMATION_OPTIONS: AnimationOptions = {};\n\nexport interface AstVisitor {\n  visitTrigger(ast: TriggerAst, context: any): any;\n  visitState(ast: StateAst, context: any): any;\n  visitTransition(ast: TransitionAst, context: any): any;\n  visitSequence(ast: SequenceAst, context: any): any;\n  visitGroup(ast: GroupAst, context: any): any;\n  visitAnimate(ast: AnimateAst, context: any): any;\n  visitStyle(ast: StyleAst, context: any): any;\n  visitKeyframes(ast: KeyframesAst, context: any): any;\n  visitReference(ast: ReferenceAst, context: any): any;\n  visitAnimateChild(ast: AnimateChildAst, context: any): any;\n  visitAnimateRef(ast: AnimateRefAst, context: any): any;\n  visitQuery(ast: QueryAst, context: any): any;\n  visitStagger(ast: StaggerAst, context: any): any;\n}\n\nexport interface Ast<T extends AnimationMetadataType> {\n  type: T;\n  options: AnimationOptions|null;\n}\n\nexport interface TriggerAst extends Ast<AnimationMetadataType.Trigger> {\n  type: AnimationMetadataType.Trigger;\n  name: string;\n  states: StateAst[];\n  transitions: TransitionAst[];\n  queryCount: number;\n  depCount: number;\n}\n\nexport interface StateAst extends Ast<AnimationMetadataType.State> {\n  type: AnimationMetadataType.State;\n  name: string;\n  style: StyleAst;\n}\n\nexport interface TransitionAst extends Ast<AnimationMetadataType.Transition> {\n  matchers: ((fromState: string, toState: string, element: any, params: {[key: string]:\n                                                                             any}) => boolean)[];\n  animation: Ast<AnimationMetadataType>;\n  queryCount: number;\n  depCount: number;\n}\n\nexport interface SequenceAst extends Ast<AnimationMetadataType.Sequence> {\n  steps: Ast<AnimationMetadataType>[];\n}\n\nexport interface GroupAst extends Ast<AnimationMetadataType.Group> {\n  steps: Ast<AnimationMetadataType>[];\n}\n\nexport interface AnimateAst extends Ast<AnimationMetadataType.Animate> {\n  timings: TimingAst;\n  style: StyleAst|KeyframesAst;\n}\n\nexport interface StyleAst extends Ast<AnimationMetadataType.Style> {\n  styles: (ɵStyleData|string)[];\n  easing: string|null;\n  offset: number|null;\n  containsDynamicStyles: boolean;\n  isEmptyStep?: boolean;\n}\n\nexport interface KeyframesAst extends Ast<AnimationMetadataType.Keyframes> { styles: StyleAst[]; }\n\nexport interface ReferenceAst extends Ast<AnimationMetadataType.Reference> {\n  animation: Ast<AnimationMetadataType>;\n}\n\nexport interface AnimateChildAst extends Ast<AnimationMetadataType.AnimateChild> {}\n\nexport interface AnimateRefAst extends Ast<AnimationMetadataType.AnimateRef> {\n  animation: ReferenceAst;\n}\n\nexport interface QueryAst extends Ast<AnimationMetadataType.Query> {\n  selector: string;\n  limit: number;\n  optional: boolean;\n  includeSelf: boolean;\n  animation: Ast<AnimationMetadataType>;\n  originalSelector: string;\n}\n\nexport interface StaggerAst extends Ast<AnimationMetadataType.Stagger> {\n  timings: AnimateTimings;\n  animation: Ast<AnimationMetadataType>;\n}\n\nexport interface TimingAst {\n  duration: number;\n  delay: number;\n  easing: string|null;\n  dynamic?: boolean;\n}\n\nexport interface DynamicTimingAst extends TimingAst {\n  strValue: string;\n  dynamic: true;\n}\n"]}