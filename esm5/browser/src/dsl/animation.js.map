{"version":3,"file":"animation.js","sourceRoot":"","sources":["../../../../../../../packages/animations/browser/src/dsl/animation.ts"],"names":[],"mappings":";;;;AAUA,OAAO,EAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAC,MAAM,SAAS,CAAC;AAG1E,OAAO,EAAC,iBAAiB,EAAC,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAC,uBAAuB,EAAC,MAAM,8BAA8B,CAAC;AAErE,OAAO,EAAC,qBAAqB,EAAC,MAAM,2BAA2B,CAAC;AAEhE,IAAA;IAEE,mBAAoB,OAAwB,EAAE,KAA4C;QAAtE,YAAO,GAAP,OAAO,CAAiB;;QAC1C,IAAM,MAAM,GAAU,EAAE,CAAC;;QACzB,IAAM,GAAG,GAAG,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACtD,IAAI,MAAM,CAAC,MAAM,EAAE;;YACjB,IAAM,YAAY,GAAG,mCAAiC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAG,CAAC;YAC1E,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;KAC1B;;;;;;;;;IAED,kCAAc;;;;;;;;IAAd,UACI,OAAY,EAAE,cAAuC,EACrD,iBAA0C,EAAE,OAAyB,EACrE,eAAuC;;QACzC,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,mBACrB,cAAc,CAAA,CAAC;;QACzE,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC,CAAC,mBACxB,iBAAiB,CAAA,CAAC;;QAC9E,IAAM,MAAM,GAAQ,EAAE,CAAC;QACvB,eAAe,GAAG,eAAe,IAAI,IAAI,qBAAqB,EAAE,CAAC;;QACjE,IAAM,MAAM,GAAG,uBAAuB,CAClC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EACxF,OAAO,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,MAAM,CAAC,MAAM,EAAE;;YACjB,IAAM,YAAY,GAAG,iCAA+B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAG,CAAC;YACxE,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;SAC/B;QACD,OAAO,MAAM,CAAC;KACf;oBAhDH;IAiDC,CAAA;AA/BD,qBA+BC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationMetadata, AnimationMetadataType, AnimationOptions, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../render/animation_driver';\nimport {ENTER_CLASSNAME, LEAVE_CLASSNAME, normalizeStyles} from '../util';\n\nimport {Ast} from './animation_ast';\nimport {buildAnimationAst} from './animation_ast_builder';\nimport {buildAnimationTimelines} from './animation_timeline_builder';\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\n\nexport class Animation {\n  private _animationAst: Ast<AnimationMetadataType>;\n  constructor(private _driver: AnimationDriver, input: AnimationMetadata|AnimationMetadata[]) {\n    const errors: any[] = [];\n    const ast = buildAnimationAst(_driver, input, errors);\n    if (errors.length) {\n      const errorMessage = `animation validation failed:\\n${errors.join(\"\\n\")}`;\n      throw new Error(errorMessage);\n    }\n    this._animationAst = ast;\n  }\n\n  buildTimelines(\n      element: any, startingStyles: ɵStyleData|ɵStyleData[],\n      destinationStyles: ɵStyleData|ɵStyleData[], options: AnimationOptions,\n      subInstructions?: ElementInstructionMap): AnimationTimelineInstruction[] {\n    const start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) :\n                                                  <ɵStyleData>startingStyles;\n    const dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) :\n                                                    <ɵStyleData>destinationStyles;\n    const errors: any = [];\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const result = buildAnimationTimelines(\n        this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest,\n        options, subInstructions, errors);\n    if (errors.length) {\n      const errorMessage = `animation building failed:\\n${errors.join(\"\\n\")}`;\n      throw new Error(errorMessage);\n    }\n    return result;\n  }\n}\n"]}